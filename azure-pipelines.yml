# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - main

# pool:
#   vmImage: ubuntu-latest

# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'

# trigger:
#     branches:
#         include:
#             - main          # Everytime the YAML file is commited, the build pipeline will be triggered!

trigger:
- none

pool:
    vmImage: 'windows-latest'

variables:
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
    solution: '**/19anonymouse97.App-Template.sln'
    project:  '**/19anonymouse97.App-Template.csproj'

steps:
- task: NuGetToolInstaller@1
  name: 'nuGetToolInstaller'
  displayName: 'NuGet Tool Installer'

- task: NuGetCommand@2
  name: 'nuGetRestore'
  displayName: 'NuGet restore packages'
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'

# - task: DotNetCoreCLI@2
#   name: 'build'
#   displayName: 'Build Project'
#   inputs:
#     command: 'build'
#     projects: '$(project)'
#     arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  name: 'publish'
  displayName: 'Publish the project'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(project)'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false

- task: PublishBuildArtifacts@1
  name: 'publishBuildArtifacts'
  displayName: 'Publish build artifacts to Azure Pipelines'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'AzureTestProject'
    publishLocation: 'Container'